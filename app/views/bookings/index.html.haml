%h1 Buchungsliste

%table.ui.table.bookingTable

  %thead
    %tr
      %th Name
      %th Pers. Anzahl
      %th Zeitraum
      %th Notiz
      %th Typ
      %th
      %th

  %tbody
    - @bookings.sort_by(&:time_start).reverse.each do |booking|
      %tr{:class => ("disabled" if booking.time_end < Time.now)}
        %td
          = "#{booking.booker.vorname} #{booking.booker.name}"
        %td
          = booking.amount
        %td
          =booking.time_start.strftime("%d.%m.%Y")
          = "-"
          =booking.time_end.strftime("%d.%m.%Y")
        %td
          = booking.notiz.truncate(30)
        %td
          - case booking.typ
          - when "std"
            = "Normal"
          - when "airbnb"
            = "Airbnb"
          - when "block"
            = "Blocker"
        %td
          = link_to edit_booking_path(booking), :id => booking.id, :class => "popup",:"data-content" => "Bearbeiten" do
            %i.edit.outline.icon
        %td
          = link_to  booking_path(booking), method: :delete, :class => "popup", data: { confirm: 'Wirklich löschen?', content: "Löschen" }, style: "margin-left: 5px" do
            %i.trash.alternate.outline.icon
%br

:javascript
  $(document).ready(function () {
    var mieterTable = $('.bookingTable').DataTable({
      columnDefs: [
        {bSortable: false, targets: [5,6]} 
      ],
      aaSorting: []
      /*"order": [[ 2, "asc" ]]*/
    });

    mieterTable.buttons().container().appendTo( $('div.nine.column:eq(0)', mieterTable.table().container()) );
    
    $('.ui.button', mieterTable.buttons().container()).addClass('basic')
  });